const { sendEmail } = require('../utils/email');

class ServicesController {
  getServicesPage(req, res) {
    const pageData = {
      title: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏ | –°—Ç–∏–ª—Å–æ—Ñ—Ç',
      currentPage: 'services',
      meta: {
        description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ IT-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
        keywords: '—É—Å–ª—É–≥–∏, IT-—Ä–µ—à–µ–Ω–∏—è, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'
      },
      services: [
        {
          id: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
          name: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
          description: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–æ–≤',
          image: 'images/part/ksbo-hover.png',
          basePrice: 500000
        },
        {
          id: 'special',
          name: '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
          description: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ö—Ä–∞–Ω—ã –±–æ–ª—å—à–∏—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π –∏ –ø–µ—Ä–∏–º–µ—Ç—Ä–æ–≤',
          image: 'images/part/spets-hover.png',
          basePrice: 800000
        },
        {
          id: 'ais',
          name: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
          description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
          image: 'images/part/ais-hover.png',
          basePrice: 300000
        }
      ]
    };
    
    res.render('pages/services', pageData);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏ —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
  async sendServiceRequest(req, res) {
    try {
      const { 
        name, 
        phone, 
        email,
        message
      } = req.body;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
      if (!name || !email ) {
        return res.status(400).json({
          success: false,
          message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'
        });
      }

      // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–∏—Å—å–º–∞
      const emailText = `
        üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥
        
        –ò–º—è: ${name}
        Email: ${email}
        –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
        
        –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
        ${message || '–ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}
      `;

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
      await sendEmail(
        process.env.EMAIL_FROM,
        '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥',
        emailText
      );

      res.json({
        success: true,
        message: '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error);
      res.status(500).json({
        success: false,
        message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏'
      });
    }
  }


  // –¢–£–¢ –ù–ê–î–û –†–ê–°–°–ß–ò–¢–ê–¢–¨ –¶–ï–ù–´, —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  calculatePrice(req, res) {
    try {
        const { serviceType, parameters } = req.body;
        let price = 0;
        let details = '';

        switch (serviceType) {
            case 'ksbo':
                const { objectArea, cameraCount, securityLevel } = parameters;
                price = (objectArea * 1000 + cameraCount * 50000) * securityLevel;
                details = `–ö–°–ë–û: ${objectArea} –º¬≤, ${cameraCount} –∫–∞–º–µ—Ä, —É—Ä–æ–≤–µ–Ω—å –∑–∞—â–∏—Ç—ã ${securityLevel}`;
                break;
            
            case 'special':
                const { perimeterLength, techType } = parameters;
                price = perimeterLength * 5000 + techType;
                details = `–°–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞: ${perimeterLength} –º –ø–µ—Ä–∏–º–µ—Ç—Ä–∞, —Ç–∏–ø —Ç–µ—Ö–Ω–∏–∫–∏ ${techType}`;
                break;
            
            case 'ais':
                const { usersCount, systemComplexity } = parameters;
                price = usersCount * 10000 + systemComplexity;
                details = `–ê–ò–°: ${usersCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–ª–æ–∂–Ω–æ—Å—Ç—å ${systemComplexity}`;
                break;
            
            default:
                return res.status(400).json({
                    success: false,
                    message: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —É—Å–ª—É–≥–∏'
                });
        }

        // –£—á–µ—Ç —Å—Ä–æ–∫–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ (–±–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ * 1.2 –ø—Ä–∏ —Å—Ä–æ–∫–µ < 2 –º–µ—Å—è—Ü–µ–≤)
        if (parameters.timeframe && parameters.timeframe < 2) {
            price *= 1.2;
            details += `, —Å—Ä–æ—á–Ω—ã–π —Å—Ä–æ–∫ (${parameters.timeframe} –º–µ—Å.)`;
        }

        res.json({
            success: true,
            price: Math.round(price),
            serviceType,
            details: `–†–∞—Å—á–µ—Ç –¥–ª—è ${serviceType}: ${details}`
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏'
        });
    }
  }
}

module.exports = new ServicesController();